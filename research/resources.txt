https://www.geeksforgeeks.org/node-js-fs-mkdirsync-method/
//https://stackoverflow.com/questions/35048686/whats-the-difference-between-path-resolve-and-path-join

https://nodejs.org/api/fs.html#fs_fs_mkdirsync_path_options


https://stackoverflow.com/questions/50818474/how-to-properly-test-if-the-type-of-the-result-is-a-javascript-function-in-jes

You can use toBe matcher to check whether result of typeof operator is function, please see example:

describe("", () => {
  it("test", () => {
    const somethingThatReturnsAFunction = () => () => {};
    const theResult = somethingThatReturnsAFunction();
    expect(typeof theResult).toBe("function");
  });
});


https://github.com/facebook/jest/issues/3457

test('name', () => {
  // array
  expect(Array.isArray(['value'])).toBe(true);
  // string
  expect(typeof 'value').toBe('string');
  // object
  expect({value: 'value'}).toBeTruthy();
  expect(typeof {value: 'value'}).toBe('object');
})


https://jestjs.io/docs/expect#tobevalue

const can = {
  name: 'pamplemousse',
  ounces: 12,
};

describe('the can', () => {
  test('has 12 ounces', () => {
    expect(can.ounces).toBe(12);
  });

  test('has a sophisticated name', () => {
    expect(can.name).toBe('pamplemousse');
  });
});